
{% extends "OCBoutiqueBundle::layout.html.twig" %}

{% block body %}
<h3>Gestion </h3>
<div class="well">
  {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

  {# Les erreurs générales du formulaire. #}
  {{ form_errors(form) }}

  {# Génération du label + error + widget pour un champ. #}
  
  {# Génération manuelle et éclatée : #}
  <div class="form-group">
    {# Génération du label. #}
    {{ form_label(form.name, "Nom commercial", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {# Affichage des erreurs pour ce champ précis. #}
    {{ form_errors(form.name) }}

    <div class="col-sm-10">
      {# Génération de l'input. #}
      {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>
  
  <div class="form-group">
    {# Génération du label. #}
    {{ form_label(form.description, "Bref descriptif de votre boutique", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

    {# Affichage des erreurs pour ce champ précis. #}
    {{ form_errors(form.description) }}

    <div class="col-sm-10">
      {# Génération de l'input. #}
      {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>
   {{ form_row(form.image) }}
  <div class="well">
  {{ form_row(form.produits) }}
  <a href="#" id="add_produits" class="btn btn-default">Ajouter un produit</a>
  </div>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#boutique_edit_produits');
    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;
    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_produits').click(function(e) {
      addProduits($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });
    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addProduits($container);
    } else {
      // S'il existe déjà des competances, on ajoute un lien de suppression pour chacune d'entre elles
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }
    // La fonction qui ajoute un formulaire CategoryType

    function addProduits($container) {

      // Dans le contenu de l'attribut « data-prototype », on remplace :

      // - le texte "__name__label__" qu'il contient par le label du champ

      // - le texte "__name__" qu'il contient par le numéro du champ

      var template = $container.attr('data-prototype')

        .replace(/__name__label__/g, 'Produit n°' + (index+1))

        .replace(/__name__/g,        index)

      ;

      // On crée un objet jquery qui contient ce template

      var $prototype = $(template);


      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie

      addDeleteLink($prototype);


      // On ajoute le prototype modifié à la fin de la balise <div>

      $container.append($prototype);


      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro

      index++;

    }
    // La fonction qui ajoute un lien de suppression d'une catégorie

    function addDeleteLink($prototype) {

      // Création du lien

      var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');


      // Ajout du lien

      $prototype.append($deleteLink);


      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie

      $deleteLink.click(function(e) {

        $prototype.remove();

        e.preventDefault(); // évite qu'un # apparaisse dans l'URL

        return false;

      });

    }

  });

</script>
 
  {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
  {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
  {# Génération automatique des champs pas encore écrits.
     Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
     et tous les champs cachés (type « hidden »). #}
  {{ form_rest(form) }}

  {# Fermeture de la balise <form> du formulaire HTML #}
  {{ form_end(form) }}
</div>

{% endblock %}